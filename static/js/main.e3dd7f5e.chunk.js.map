{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","audio","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAYeA,G,MAVF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACb,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAKF,EAAYG,MAAOC,IAAKJ,EAAYK,OAC9C,6BAAKL,EAAYK,OACjB,6BAAKL,EAAYM,c,cCyHRC,EAvHA,SAAC,GAUT,IATLP,EASI,EATJA,YACAQ,EAQI,EARJA,UACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,SAEMC,EAAuB,SAACC,GAG5B,IAAMC,EAAWL,EAAMM,KAAI,SAACC,GAC1B,OAAIA,EAAKC,KAAOJ,EAASI,GAChB,2BACFD,GADL,IAEEE,QAAQ,IAGH,2BACFF,GADL,IAEEE,QAAQ,OAIdP,EAASG,IAaLK,EAAU,SAACC,GACf,OACEC,KAAKC,MAAMF,EAAO,IAAM,KAAO,IAAMC,KAAKC,MAAMF,EAAO,KAAKG,OAAO,IAQjEC,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACnBC,EAAelB,EAAMmB,WAAU,SAACZ,GAAD,OAAUA,EAAKC,KAAOrB,EAAYqB,MACnD,iBAAdQ,EAFmB,gCAGff,EAAeD,GAAOkB,EAAe,GAAKlB,EAAMoB,SAHjC,OAIrBjB,EAAqBH,GAAOkB,EAAe,GAAKlB,EAAMoB,SAJjC,UAML,cAAdJ,EANmB,qBAOhBE,EAAe,GAAKlB,EAAMoB,UAAY,EAPtB,iCAQbnB,EAAeD,EAAMA,EAAMoB,OAAS,IARvB,cASnBjB,EAAqBH,EAAMA,EAAMoB,OAAS,IACtCzB,GAAWE,EAASwB,QAAQC,OAVb,4CAafrB,EAAeD,GAAOkB,EAAe,GAAKlB,EAAMoB,SAbjC,QAcrBjB,EAAqBH,GAAOkB,EAAe,GAAKlB,EAAMoB,SAdjC,QAgBnBzB,GAAWE,EAASwB,QAAQC,OAhBT,4CAAH,sDAoBhBC,EAAY,CAChBC,UAAU,cAAD,OAAgBzB,EAAS0B,oBAAzB,OAGX,OACE,sBAAKrC,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,4BAAIsB,EAAQX,EAAS2B,eACrB,sBACEC,MAAO,CACLC,WAAW,6BAAD,OAA+BzC,EAAY0C,MAAM,GAAjD,YAAuD1C,EAAY0C,MAAM,GAAzE,MAEZzC,UAAU,QAJZ,UAME,uBACE0C,IAAK,EACLC,IAAKhC,EAASiC,UAAY,EAC1BC,MAAOlC,EAAS2B,YAChBQ,SA3CU,SAACC,GACnBtC,EAASwB,QAAQK,YAAcS,EAAEC,OAAOH,MACxCnC,EAAY,2BAAKC,GAAN,IAAgB2B,YAAaS,EAAEC,OAAOH,UA0CzCI,KAAK,UAEP,qBAAKV,MAAOJ,EAAWnC,UAAU,qBAEnC,4BAAIW,EAASiC,SAAWtB,EAAQX,EAASiC,UAAY,YAEvD,sBAAK5C,UAAU,eAAf,UACE,cAAC,IAAD,CACEkD,QAAS,kBAAMvB,EAAiB,cAChC3B,UAAU,YACVmD,KAAMC,IACNC,KAAK,OAEP,cAAC,IAAD,CACEH,QAzEgB,WAClB3C,GACFE,EAASwB,QAAQqB,QACjB9C,GAAcD,KAEdE,EAASwB,QAAQC,OACjB1B,GAAcD,KAoEVP,UAAU,OACVmD,KAAM5C,EAAYgD,IAAUC,IAC5BH,KAAK,OAEP,cAAC,IAAD,CACEH,QAAS,kBAAMvB,EAAiB,iBAChC3B,UAAU,eACVmD,KAAMM,IACNJ,KAAK,cC5EAK,EA1CK,SAAC,GAQd,IAPLvC,EAOI,EAPJA,KACAN,EAMI,EANJA,eACAD,EAKI,EALJA,MACAH,EAII,EAJJA,SACAF,EAGI,EAHJA,UACAO,EAEI,EAFJA,SACAM,EACI,EADJA,GAEMuC,EAAiB,uCAAG,4BAAA9B,EAAA,sEAClBhB,EAAeM,GADG,OAGlBF,EAAWL,EAAMM,KAAI,SAACC,GAC1B,OAAIA,EAAKC,KAAOA,EACP,2BACFD,GADL,IAEEE,QAAQ,IAGH,2BACFF,GADL,IAEEE,QAAQ,OAIdP,EAASG,GACLV,GAAWE,EAASwB,QAAQC,OAjBR,2CAAH,qDAmBvB,OACE,sBACEgB,QAASS,EACT3D,UAAS,uBAAkBmB,EAAKE,OAAS,WAAa,IAFxD,UAIE,qBAAKpB,IAAKkB,EAAKjB,MAAOC,IAAKgB,EAAKf,OAChC,sBAAKJ,UAAU,mBAAf,UACE,6BAAKmB,EAAKf,OACV,6BAAKe,EAAKd,gBCPHuD,EA7BC,SAAC,GAOV,IANLhD,EAMI,EANJA,MACAC,EAKI,EALJA,eACAJ,EAII,EAJJA,SACAF,EAGI,EAHJA,UACAO,EAEI,EAFJA,SACA+C,EACI,EADJA,cAEA,OACE,sBAAK7D,UAAS,kBAAa6D,EAAgB,iBAAmB,IAA9D,UACE,yCACA,qBAAK7D,UAAU,gBAAf,SACGY,EAAMM,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CACEP,MAAOA,EACPC,eAAgBA,EAChBM,KAAMA,EACNC,GAAID,EAAKC,GAETX,SAAUA,EACVF,UAAWA,EACXO,SAAUA,GAHLK,EAAKC,aCJP0C,EAZH,SAAC,GAAuC,IAAtCD,EAAqC,EAArCA,cAAeE,EAAsB,EAAtBA,iBAC3B,OACE,gCACE,uCACA,yBAAQb,QAAS,kBAAMa,GAAkBF,IAAzC,oBAEE,cAAC,IAAD,CAAiBV,KAAMa,a,QCehBC,EAxBE,WACf,MAAO,CACL,CACE7D,KAAM,eACNC,OAAQ,sBACRH,MACE,yGACFkB,GAAI8C,cACJ7C,QAAQ,EACRoB,MAAO,CAAC,UAAW,WACnB0B,MAAO,gDAET,CACE/D,KAAM,kBACNC,OAAQ,eACRH,MAAM,yGACNkB,GAAI8C,cACJ7C,QAAQ,EACRoB,MAAO,CAAC,UAAW,WACnB0B,MAAO,mDCwDEC,MAlEf,WAEE,IAAM3D,EAAW4D,iBAAO,MAFX,EAIqBC,oBAAS,GAJ9B,mBAIN/D,EAJM,KAIKC,EAJL,OAKa8D,mBAASC,KALtB,mBAKN3D,EALM,KAKCE,EALD,OAMyBwD,mBAAS1D,EAAM,IANxC,mBAMNb,EANM,KAMOc,EANP,OAOmByD,mBAAS,CACvChC,YAAa,EACbM,SAAU,EACVP,oBAAqB,IAVV,mBAON1B,EAPM,KAOID,EAPJ,OAY6B4D,oBAAS,GAZtC,mBAYNT,EAZM,KAYSE,EAZT,KAaPS,EAAoB,SAACzB,GACzB,IAAMd,EAAUc,EAAEC,OAAOV,YACnBM,EAAWG,EAAEC,OAAOJ,SAEpB6B,EAAiBjD,KAAKkD,MAAMzC,GAC5B0C,EAAkBnD,KAAKkD,MAAM9B,GAC7BgC,EAAapD,KAAKkD,MAAOD,EAAiBE,EAAmB,KACnEjE,EAAY,2BACPC,GADM,IAET2B,YAAaL,EACbW,SAAUA,EACVP,oBAAqBuC,MAGnBC,EAAc,uCAAG,4BAAAhD,EAAA,6DACjBC,EAAelB,EAAMmB,WAAU,SAACZ,GAAD,OAAUA,EAAKC,KAAOrB,EAAYqB,MADhD,SAEfP,EAAeD,GAAOkB,EAAe,GAAKlB,EAAMoB,SAFjC,OAGjBzB,GAAWE,EAASwB,QAAQC,OAHX,2CAAH,qDAKpB,OACE,sBAAKlC,UAAS,cAAS6D,EAAgB,iBAAmB,IAA1D,UACE,cAAC,EAAD,CAAKA,cAAeA,EAAeE,iBAAkBA,IACrD,cAAC,EAAD,CAAMhE,YAAaA,IACnB,cAAC,EAAD,CACEQ,UAAWA,EACXC,aAAcA,EACdT,YAAaA,EACbU,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,MAAOA,EACPC,eAAgBA,EAChBC,SAAUA,IAEZ,cAAC,EAAD,CACEL,SAAUA,EACVG,MAAOA,EACPC,eAAgBA,EAChBN,UAAWA,EACXO,SAAUA,EACV+C,cAAeA,IAEjB,uBACEiB,iBAAkBN,EAClBO,aAAcP,EACdQ,IAAKvE,EACLR,IAAKF,EAAYoE,MACjBc,QAASJ,QC3DFK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3dd7f5e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Song = ({currentSong}) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name}></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  const activeLibraryHandler = (nextPrev) => {\n    //Use Effect\n\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n  //Event Handler\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  //Add styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs,\n  id,\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    //Add Active State\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            setCurrentSong={setCurrentSong}\n            song={song}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)} >\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\n\nconst chillHop = () => {\n  return [\n    {\n      name: \"Jazz Cabbage\",\n      artist: \"Ian Ewing, Strehlow\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg\",\n      id: uuidv4(),\n      active: true,\n      color: [\"#ba4a46\", \"#fdf0dd\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9363\",\n    },\n    {\n      name: \"Maple Leaf Pt.2\",\n      artist: \"Philanthrope\",\n      cover:\"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#414628\", \"#dd8361\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10243\",\n    },\n  ];\n};\n\nexport default chillHop","import React, { useState, useRef } from \"react\";\n//Import Styles\nimport \"./styles/app.scss\";\n//Adding Components\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import Util\nimport data from \"./data\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  //State\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}